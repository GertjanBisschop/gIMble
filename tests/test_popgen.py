import pytest
import lib.gimble
import numpy as np

@pytest.mark.popgen
class Test_popgen:

    def test_popgen_metrics_windows_tally(self):
        sites = (10 * 10)
        window_tally = np.array([[0, 1, 0, 0, 0, 1],
                          [0, 2, 0, 1, 0, 1],
                          [0, 2, 1, 0, 1, 0],
                          [0, 1, 1, 1, 0, 0],
                          [0, 3, 1, 1, 0, 1],
                          [0, 1, 1, 1, 1, 0],
                          [1, 1, 0, 0, 0, 0],
                          [1, 1, 0, 0, 0, 1],
                          [1, 2, 0, 0, 1, 0],
                          [1, 2, 0, 1, 0, 0],
                          [1, 2, 0, 1, 1, 0],
                          [1, 1, 1, 0, 0, 0],
                          [1, 1, 1, 1, 1, 0],
                          [2, 1, 0, 0, 0, 0],
                          [2, 1, 0, 0, 0, 1],
                          [2, 1, 0, 0, 1, 0],
                          [2, 1, 0, 1, 0, 0],
                          [2, 1, 0, 1, 0, 1],
                          [2, 1, 0, 1, 1, 0],
                          [2, 1, 1, 0, 0, 1],
                          [2, 1, 1, 1, 0, 1],
                          [2, 2, 1, 1, 1, 0],
                          [3, 1, 0, 0, 0, 0],
                          [3, 1, 0, 0, 0, 1],
                          [3, 2, 0, 0, 1, 0],
                          [3, 1, 0, 1, 0, 0],
                          [3, 2, 0, 1, 1, 0],
                          [3, 2, 1, 1, 0, 0],
                          [3, 1, 1, 1, 0, 1],
                          [4, 1, 0, 0, 0, 0],
                          [4, 1, 0, 0, 1, 0],
                          [4, 1, 0, 1, 0, 0],
                          [4, 1, 0, 1, 1, 0],
                          [4, 2, 1, 0, 0, 1],
                          [4, 1, 1, 1, 0, 0],
                          [4, 1, 1, 1, 0, 1],
                          [4, 2, 1, 1, 1, 0]])
        result_exp = np.array([[ 0.1       ,  0.1       ,  0.1       ,  0.1       ,  0.1       ],
                               [ 0.1       ,  0.07      ,  0.08      ,  0.07      ,  0.1       ],
                               [ 0.145     ,  0.07      ,  0.11      ,  0.085     ,  0.11      ],
                               [ 0.18367347, -0.09677419,  0.1       ,  0.        ,  0.04761905]])
        result_obs = lib.gimble.get_popgen_metrics(window_tally, sites=sites)
        assert np.all(np.isclose(result_exp, result_obs))

    def test_popgen_metrics_blocks_tally(self):
        sites = (50 * 10)
        block_tally = np.array([[2, 0, 0, 0, 0],
                                [2, 0, 0, 0, 1],
                                [2, 0, 0, 0, 2],
                                [2, 0, 0, 1, 0],
                                [1, 0, 0, 2, 0],
                                [1, 0, 1, 0, 2],
                                [1, 0, 1, 2, 0],
                                [2, 0, 2, 0, 0],
                                [2, 0, 2, 0, 2],
                                [2, 0, 2, 1, 0],
                                [1, 0, 2, 2, 0],
                                [1, 1, 0, 0, 0],
                                [1, 1, 0, 0, 2],
                                [1, 1, 0, 2, 0],
                                [1, 1, 1, 0, 1],
                                [1, 1, 1, 0, 2],
                                [3, 1, 1, 1, 0],
                                [3, 1, 1, 2, 0],
                                [1, 1, 2, 0, 0],
                                [2, 1, 2, 0, 1],
                                [1, 1, 2, 1, 0],
                                [5, 2, 0, 0, 1],
                                [2, 2, 0, 1, 0],
                                [2, 2, 0, 2, 0],
                                [3, 2, 1, 0, 1],
                                [1, 2, 1, 2, 0],
                                [1, 2, 2, 0, 0],
                                [1, 2, 2, 0, 1],
                                [2, 2, 2, 0, 2]])
        result_exp = np.array([[0.148],
                               [0.158],
                               [0.187],
                               [0.1]])
        result_obs = lib.gimble.get_popgen_metrics(block_tally, sites=sites)
        assert np.all(np.isclose(result_exp, result_obs))